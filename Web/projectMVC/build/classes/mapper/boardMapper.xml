<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="boardSQL">

	<!-- 글쓰기 -->

	<!-- <insert id="boardWrite" parameterType="java.util.Map">
		insert into board (seq, id, name, email, subject, content, ref)
					values(seq_board.nextval
						, #{id}
						, #{name}
						, #{email}
						, #{subject}
						, #{content}
						, seq_board.nextval)
		
		MySQL		
		insert into board (id
						  , name
						  , email
						  , subject
						  , content
						  , ref)
					values(#{id}
						, #{name}
						, #{email}
						, #{subject}
						, #{content}
						, (select auto_increment from information_schema.tables
							where table_schema=database() and table_name='board'))
		
		LAST_INSERT_ID()+1) 
		AUTO_INCREMENT의 마지막 값을 얻어온다.
		하지만 서버를 껐다가 키고 insert를 수행하지 않으면 LAST_INSERT_ID()는 0으로 나온다. (단점)
		뮤조건 insert를 먼저 수행해야 AUTO_INCREMENT의 마지막 값을 얻어온다.
		
	</insert> -->
	<!-- boarWrite prodedure 호출 -->
	<insert id="boardWrite" parameterType="java.util.Map" statementType="CALLABLE">
		{call boardWrite(#{id}, #{name}, #{email}, #{subject}, #{content} ) }
	</insert>
	
	<!-- 목록 -->
	<select id="boardList" parameterType="java.util.Map" resultType="board.bean.BoardDTO">
		<!-- select * from
		(select rownum rn, tt.* from
		(select * from board order by ref desc, step asc)tt
		)where rn>=#{startNum} and rn &lt;= #{endNum} -->
		
		<!-- select * from
		(select rownum rn, tt.* from
		(select * from board order by ref desc, step asc)tt
		)where rn between #{startNum} and #{endNum} -->
		
		<!-- <![CDATA[
		select * from
		(select rownum rn, tt.* from
		(select * from board order by ref desc, step asc)tt
		)where rn >= #{startNum} and rn<= #{endNum}
		]]> -->
		
		<!-- MySQL -->
		select * from board order by ref desc, step asc limit #{startNum }, #{endNum }
		
		
	</select>
	
	<!-- 총 글수 -->
	<select id="getTotalA" resultType="int">
		select count(*) from board
	</select>
	
	<!-- 1개의 글보기 -->
	<select id="getBoard" parameterType="int" resultType="board">
		select * from board where seq=#{seq}
	</select>

	<!-- 원글의 답글 수 증가 -->
	<update id="boardReplyStep" parameterType="board" >
		update board set step=step+1 where ref=#{ref} and step>#{step}
	</update>
	
	<!-- 답글 생성 -->
	<insert id="boardReply" parameterType="java.util.Map">
		insert into board (id
						  ,name
						  ,email
						  ,subject
						  ,content
						  ,ref
						  ,lev
						  ,step
						  ,pseq
						  ,reply
						  ,hit
						  ,logtime)
					values(#{id}
						, #{name}
						, #{email}
						, #{subject}
						, #{content}
						, #{ref}
						, #{lev}
						, #{step}
						, #{pseq}
						, 0 
						, 0	
						, now()) 
	</insert>
	
	<!-- 답글들의 순서 맞추기 -->
	<update id="boardReplyReply" parameterType="int">
		update board set reply=reply+1 where seq = #{pseq}
	</update>
	

	<!-- 글 수정하기 -->
	<update id="boardUpdate" parameterType="java.util.Map">
		update board set subject=#{subject}, content=#{content}, logtime=now() where seq=#{seq}
	</update>
	
	<!-- 글삭제 -->
	<!-- <delete id="boardDelete" parameterType="int">
		begin
			원글을 찾아서 원글의 reply(답글수)감소
			update board set reply=reply-1 where seq=(select pseq from board where seq=#{seq});
			
			
			
			답글을 찾아서 sunbject(제목) 추가
			update board set subject= '[원글이 삭제된 답글]' || subject where pseq=#{seq};
			
			삭제
			delete from board where seq=#{seq};
		end;
	</delete> -->
	
	<!-- MySQL -->	
	<!-- boardDelete로 프로시저 호출 -->
	<delete id="boardDelete" statementType="CALLABLE">
		{ call boardDelete(#{seq}) }
	</delete>

</mapper>